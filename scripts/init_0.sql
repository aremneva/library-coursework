-- MySQL Script generated by MySQL Workbench
-- Sat Apr  3 19:19:06 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema NewLibrary
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema NewLibrary
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `NewLibrary` DEFAULT CHARACTER SET utf8 ;
USE `NewLibrary` ;

-- -----------------------------------------------------
-- Table `NewLibrary`.`genre`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `NewLibrary`.`genre` (
  `idGenre` INT NOT NULL AUTO_INCREMENT,
  `nameGen` VARCHAR(60) NULL,
  `description` VARCHAR(255) NULL,
  PRIMARY KEY (`idGenre`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NewLibrary`.`publishers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `NewLibrary`.`publishers` (
  `idPub` INT NOT NULL AUTO_INCREMENT,
  `namePub` VARCHAR(60) NULL,
  `city` VARCHAR(60) NULL,
  `adress` VARCHAR(150) NULL,
  PRIMARY KEY (`idPub`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NewLibrary`.`storage`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `NewLibrary`.`storage` (
  `id_storage` INT NOT NULL AUTO_INCREMENT,
  `row` VARCHAR(15) NULL,
  `shelf` VARCHAR(15) NULL,
  PRIMARY KEY (`id_storage`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NewLibrary`.`books`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `NewLibrary`.`books` (
  `idBooks` INT NOT NULL AUTO_INCREMENT,
  `author` VARCHAR(45) NULL,
  `idGen` INT NOT NULL,
  `idPub` INT NOT NULL,
  `nameBook` VARCHAR(60) NULL,
  `year` INT(10) NULL,
  `id_storage` INT NULL,
  PRIMARY KEY (`idBooks`),
  INDEX `idGen_idx` (`idGen` ASC) VISIBLE,
  INDEX `idPub_idx` (`idPub` ASC) VISIBLE,
  INDEX `id_storage_idx` (`id_storage` ASC) VISIBLE,
  CONSTRAINT `idGen`
    FOREIGN KEY (`idGen`)
    REFERENCES `NewLibrary`.`genre` (`idGenre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `idPub`
    FOREIGN KEY (`idPub`)
    REFERENCES `NewLibrary`.`publishers` (`idPub`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `id_storage`
    FOREIGN KEY (`id_storage`)
    REFERENCES `NewLibrary`.`storage` (`id_storage`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NewLibrary`.`readers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `NewLibrary`.`readers` (
  `idReaders` INT NOT NULL AUTO_INCREMENT,
  `Familia` VARCHAR(45) NULL,
  `Imya` VARCHAR(45) NULL,
  `Otchestvo` VARCHAR(45) NULL,
  `birthday` DATE NULL,
  `pol` VARCHAR(45) NULL,
  `adress` VARCHAR(150) NULL,
  `phone` VARCHAR(45) NULL,
  `pasport` INT(20) NULL,
  PRIMARY KEY (`idReaders`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NewLibrary`.`library_card`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `NewLibrary`.`library_card` (
  `id_library_card` INT NOT NULL AUTO_INCREMENT,
  `idReaders` INT NOT NULL,
  `date_of_issue` DATE NULL,
  PRIMARY KEY (`id_library_card`),
  INDEX `idReaders_idx` (`idReaders` ASC) VISIBLE,
  CONSTRAINT `idReaders`
    FOREIGN KEY (`idReaders`)
    REFERENCES `NewLibrary`.`readers` (`idReaders`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NewLibrary`.`post`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `NewLibrary`.`post` (
  `idPost` INT NOT NULL AUTO_INCREMENT,
  `PostName` VARCHAR(45) NOT NULL,
  `Demand` VARCHAR(255) NULL,
  `Duties` VARCHAR(255) NULL,
  `Oklad` INT(25) NULL,
  PRIMARY KEY (`idPost`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NewLibrary`.`staff`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `NewLibrary`.`staff` (
  `idStaff` INT NOT NULL AUTO_INCREMENT,
  `idPost` INT NOT NULL,
  `Familia` VARCHAR(45) NULL,
  `Imya` VARCHAR(45) NULL,
  `Otchestvo` VARCHAR(45) NULL,
  `Vozrast` INT(5) NULL,
  `Pol` VARCHAR(5) NULL,
  `Adress` VARCHAR(150) NULL,
  `Phone` VARCHAR(45) NULL,
  `Pasport` INT(15) NULL,
  `coef` DOUBLE NULL,
  PRIMARY KEY (`idStaff`),
  INDEX `idPost_idx` (`idPost` ASC) VISIBLE,
  CONSTRAINT `idPost`
    FOREIGN KEY (`idPost`)
    REFERENCES `NewLibrary`.`post` (`idPost`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NewLibrary`.`issuedbooks`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `NewLibrary`.`issuedbooks` (
  `idIssued` INT NOT NULL AUTO_INCREMENT,
  `idBooks` INT NOT NULL,
  `id_library_card` INT NOT NULL,
  `idStaff` INT NOT NULL,
  `issuedDate` DATE NULL,
  `returnDate` DATE NULL,
  `returnDateReal` DATE NULL,
  INDEX `idStaff_idx` (`idStaff` ASC) VISIBLE,
  PRIMARY KEY (`idIssued`),
  INDEX `id_library_card_idx` (`id_library_card` ASC) VISIBLE,
  CONSTRAINT `idBooks`
    FOREIGN KEY (`idBooks`)
    REFERENCES `NewLibrary`.`books` (`idBooks`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `id_library_card`
    FOREIGN KEY (`id_library_card`)
    REFERENCES `NewLibrary`.`library_card` (`id_library_card`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `idStaff`
    FOREIGN KEY (`idStaff`)
    REFERENCES `NewLibrary`.`staff` (`idStaff`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NewLibrary`.`fines`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `NewLibrary`.`fines` (
  `id_fines` INT NOT NULL AUTO_INCREMENT,
  `article` VARCHAR(45) NULL,
  PRIMARY KEY (`id_fines`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NewLibrary`.`card_fines`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `NewLibrary`.`card_fines` (
  `id_library_card` INT NOT NULL,
  `id_fines` INT NOT NULL,
  `data` DATE NULL,
  INDEX `fines_idx` (`id_fines` ASC) VISIBLE,
  CONSTRAINT `id_library_card`
    FOREIGN KEY (`id_library_card`)
    REFERENCES `NewLibrary`.`library_card` (`id_library_card`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fines`
    FOREIGN KEY (`id_fines`)
    REFERENCES `NewLibrary`.`fines` (`id_fines`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `NewLibrary`.`genre`
-- -----------------------------------------------------
START TRANSACTION;
USE `NewLibrary`;
INSERT INTO `NewLibrary`.`genre` (`idGenre`, `nameGen`, `description`) VALUES (1, 'Авангардная литература', 'Характеризуется нарушением канонов и языковыми и сюжетными экспериментами.');
INSERT INTO `NewLibrary`.`genre` (`idGenre`, `nameGen`, `description`) VALUES (2, 'Боевик', 'Ориентирован преимущественно на мужскую аудиторию. Основа сюжета — драки, погони.');
INSERT INTO `NewLibrary`.`genre` (`idGenre`, `nameGen`, `description`) VALUES (3, 'Детектив', 'Основная сюжетная линия — раскрытие преступления.');
INSERT INTO `NewLibrary`.`genre` (`idGenre`, `nameGen`, `description`) VALUES (4, 'Комедия', 'вид драмы, в котором характеры, ситуации и действия представлены в смешных формах или проникнуты комическим.');
INSERT INTO `NewLibrary`.`genre` (`idGenre`, `nameGen`, `description`) VALUES (5, 'Трагедия', 'произведение, в основу которого положен непримиримый жизненный конфликт, ведущий к страданиям и гибели героев.');
INSERT INTO `NewLibrary`.`genre` (`idGenre`, `nameGen`, `description`) VALUES (6, 'Драма', 'пьеса с острым конфликтом, который, в отличие от трагического, не столь возвышен, более приземлен, обычен и так или иначе разрешим.');
INSERT INTO `NewLibrary`.`genre` (`idGenre`, `nameGen`, `description`) VALUES (7, 'Исторический роман', 'Время действия — прошлое. Сюжет, как правило, привязан к значимым историческим событиям.');
INSERT INTO `NewLibrary`.`genre` (`idGenre`, `nameGen`, `description`) VALUES (8, 'Любовный роман', 'Герои обретают любовь.');
INSERT INTO `NewLibrary`.`genre` (`idGenre`, `nameGen`, `description`) VALUES (9, 'Мистика', 'Основа сюжета — сверхъестественные события.');
INSERT INTO `NewLibrary`.`genre` (`idGenre`, `nameGen`, `description`) VALUES (10, 'Приключения', 'Герои ввязываются в авантюру и/или отправляются в рискованное путешествие.');
INSERT INTO `NewLibrary`.`genre` (`idGenre`, `nameGen`, `description`) VALUES (11, 'Триллер/ужасы', 'Героям грозит смертельная опасность, от которой они пытаются избавиться.');
INSERT INTO `NewLibrary`.`genre` (`idGenre`, `nameGen`, `description`) VALUES (12, 'Фантастика', 'Сюжет закручивается в гипотетическом будущем или в параллельном мире. Одна из разновидностей фантастики — альтернативная история.');
INSERT INTO `NewLibrary`.`genre` (`idGenre`, `nameGen`, `description`) VALUES (13, 'Фэнтези/сказки', 'Основными признаками жанра являются сказочные миры, волшебство, невиданные существа, говорящие животные и пр. Часто основывается на фольк...');
INSERT INTO `NewLibrary`.`genre` (`idGenre`, `nameGen`, `description`) VALUES (14, 'Роман', 'Большое повествовательное художественное произведение со сложным сюжетом.');

COMMIT;

